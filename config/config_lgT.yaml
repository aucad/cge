zoo:
  # Attack instance parameters
  confidence: 0.25
  learning_rate: 0.1
  binary_search_steps: 10
  initial_const: 0.001
  abort_early: True
  use_resize: False
  use_importance: False
  variable_h: 0.3
  targeted: False
  nb_parallel: 5
  batch_size: 1
  verbose: True
  max_iter: 5

xgb:
  # Tree booster params
  eta: 0.3
  gamma: 0
  max_depth: 6
  min_child_weight: 1
  tree_method: exact
  objective: multi:softprob

dataset: data/large_norm.csv
out: result/large_const.yaml
folds: 5 # K-folds
iter: 2  # Attack iters

validate: true
immutable: [ 10,  11,  12,  13 ]
constraints:
  0: [ [ 1, 2 ], "lambda x: sum(x) == 1" ]
  1: [ [ 0, 2 ], "lambda x: sum(x) == 1" ]
  2: [ [ 0, 1 ], "lambda x: sum(x) == 1" ]
  6: [ [ 7, 8, 1, 16, 17 ], "lambda x: sum(x[0:2]) == 1 and (x[0] != 1 or x[3] != 1 or (x[4] == 0 and x[5] == 0))" ]
  7: [ [ 6, 8 ], "lambda x: sum(x) == 1" ]
  8: [ [ 6, 7 ], "lambda x: sum(x) == 1" ]
#  14: [ [ 1, 2, 16, 8, 15, 17, 11, 7 ], "lambda opk, tcp, udp, rpk, oth, obt, rbt, hD, SF: (tcp != 1 or opk >= rpk or oth == 1 or obt < rbt) and (udp != 1 or (opk >= rpk or (SF == 1 and hD ==1)) and (opk < rpk or (SF==1 or obt < rbt)))" ]
  15: [ [ 1, 14 ], "lambda x: x[1] != 1 or (x[2] <= x[0] and (x[2] == 0 or x[0] >= 20))" ]
  17: [ [ 1, 16 ], "lambda x: x[1] != 1 or (x[2] <= x[0] and (x[2] == 0 or x[0] >= 20))" ]

#   0 --- proto=udp
#   1 --- proto=tcp
#   2 --- proto=icmp
#   3 --- duration
#   4 --- orig_bytes
#   5 --- resp_bytes
#   6 --- conn_state=S0
#   7 --- conn_state=SF
#   8 --- conn_state=other
#   9 --- missed_bytes
#  10 --- history=D
#  11 --- history=Dd
#  12 --- history=S
#  13 --- history=other
#  14 --- orig_pkts
#  15 --- orig_ip_bytes
#  16 --- resp_pkts
#  17 --- resp_ip_bytes
#  18 --- label